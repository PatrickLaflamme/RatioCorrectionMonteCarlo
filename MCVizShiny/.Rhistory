source('Monte Carlo Basic Functions.R')
load('MCresults-Labelled.RData')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
all.equal(0.9, -3:10)
all.equal(rep(0.9, 14), -3:10)
dimnames(newOutput)[[2]][3]
runApp()
0.45/8
runApp()
pretty(c(0,.4), n=8)
runApp()
trunc(0.01231231204124, digits=2)
trunc(0.01231231204124, digits=2)
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='patricklaflamme', token='A0DE6E93ED733EDC29EFEA47FB7940F1', secret='DnF43bbLDw2x6udw88OOKM9zgt8qEt9LSXicEq7j')
rsconnect::deployApp('../MCVizShiny/')
rsconnect::deployApp('../MCVizShiny/')
rsconnect::deployApp('../MCVizShiny/')
runTest(1,1,1,0)
meanEffect/meanSlope * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,]/meanSlope))) #perform the correction
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
runTest(1,1,1,0)
runTest(1,1,1,0, seed=123432)
genIndex(cbind(1:10,11:20), 3)
genIndex(array(cbind(1:10,11:20), dim=c(10,2,1), 3)
)
genIndex(array(cbind(1:10,11:20), dim=c(10,2,1)), 3)
genIndex(array(cbind(1:10,11:20,1:10,11:20), dim=c(10,2,2)), 3)
genIndex(array(cbind(1:10,11:20,1:10,11:20,1:10,11:20,1:10,11:20), dim=c(10,2,2)), 3)
genIndex(array(cbind(1:10,11:20,1:10,11:20,1:10,11:20,1:10,11:20), dim=c(10,2,4)), 3)
array(cbind(1:10,11:20,1:10,11:20,1:10,11:20,1:10,11:20), dim=c(10,2,4))
genIndex(array(cbind(1:10,11:20,1:10,11:20), dim=c(10,2,2)), 3)
runTest(1,1,1,0, seed=6356456)
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
runTest(1,1,1,0)
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
array(cbind(1:10,11:20,101:110,111:120), dim=c(10,2,2))
genIndex(array(cbind(1:10,11:20,101:110,111:120), dim=c(10,2,2)), 3)
genIndex(array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2)), 3)
genIndex(array(cbind(1:10,101:110), dim=c(10,2,2)), 3)
genIndex(array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2)), 3)
array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2))
debugSource('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
genIndex(array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2)), 3)
data
meanEffect/meanSlope
5.5/15.5
t(t(data[,1,])/meanEffect)
t(data[,1,]/meanEffect)
data[,1,]/meanEffect
t(t(data[,2,])/meanSlope)
11:20/.35
t(t(data[,1,])/meanEffect)
t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))*meanEffect/meanSlope
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))*t(meanEffect/meanSlope)
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))*meanEffect/meanSlope
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))*5.5/15.5
(1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))*c(5.5/15.5, 5.5/105.5
)
matrix(meanEffect/meanSlope, nrow=dim(data)[1])
matrix(meanEffect/meanSlope, nrow=dim(data)[1])
matrix(meanEffect/meanSlope, nrow=dim(data)[1], ncol=2)
t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=2))
t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=2)) * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)) #perform the correction
5.5/105.5 * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)) #perform the correction
genIndex(array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2)), 3)
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
genIndex(array(cbind(1:10,11:20,1:10,101:110), dim=c(10,2,2)), 3)
runTest(1,1,1,0)
debugSource('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
test <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=dim(data)[2]))
test <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[2]))
indexData <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[2])) * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)) #perform the correction
runTest(1,1,1,0)
t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=dim(data)[2]))
debugSource('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
debugSource('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
test <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[2]))
test2 <0 (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))
test2 <- (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope))
test3 <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[1])) * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)) #perform the correction
test3 <- t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[1]))
test3 <- matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[1]) * (1 + t(t(data[,1,])/meanEffect) - t(t(data[,2,])/meanSlope)) #perform the correction
runTest(1,1,1,0)
t(matrix(meanEffect/meanSlope, ncol=dim(data)[3], nrow=dim(data)[2]))
t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=dim(data)[3]))
t(matrix(meanEffect/meanSlope, ncol=dim(data)[1], nrow=dim(data)[3]))[,1:10]
debugSource('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
runTest(1,1,1,0)
runTest(1,1,1,0)
rsconnect::deployApp('../MCVizShiny/')
rsconnect::deployApp('../MCVizShiny/')
shiny::runApp()
rsconnect::deployApp('../MCVizShiny/')
load('MCresults-Skewness.RData')
dimnames(output) <- dimnames(newOutput)
shiny::runApp()
runApp()
all(output ==newOutput)
any(output ==newOutput)
max(newOutput)
max(output)
min(output)
min(newOutput)
remove(newOutput)
remove(output)
runApp()
load('MCresults-Labelled.RData')
load('MCresults-Skewness.RData')
dimnames(output) <- dimnames(newOutput)
newOutput <- output
print('switched to skewness')
all(output ==newOutput)
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('../MCVizShiny/')
rsconnect::deployApp('../MCVizShiny/')
shiny::runApp()
outputPop <- output
load('MCresults-Skewness-SampDist.RData')
max(output)
min(output)
hist(output)
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp('../MCVizShiny/')
source('~/Dropbox/MCratio/MCVizShiny/Monte Carlo Basic Functions.R', echo=TRUE)
source('~/Dropbox/MCratio/Monte Carlo Basic Functions.R', echo=TRUE)
test <- runTest(0.9, 0.2, 2, 0.4)
hist(test)
source('~/Dropbox/MCratio/Monte Carlo Basic Functions.R', echo=TRUE)
test <- runTest(0.9, 0.2, 2, 0.4)
hist(test[,1])
hist(test[,1], breaks = 100)
hist(test[,1], breaks = 1000)
hist(test[,2], breaks = 1000)
hist(test[,3], breaks = 1000)
hist(test[,2], breaks = 1000)
hist(test[,3], breaks = 1000)
hist(test[test[,1]<10,1], breaks = 1000)
index <- test[,1]
index <- index[index<10]
index <- index[index>-10]
hist(index, 1000)
skewness(index)
skewness(test[,1])
index <- test[,1]
index <- index[index>-100]
index <- index[index<100]
hist(index, 1000)
skewness(test[,2])
skewness(test[,3])
all(test[,2]==test[,3])
any(test[,2]==test[,3])
sum(test[,2]==test[,3])
